        -:    0:Source:randomtestcard2.c
        -:    0:Graph:randomtestcard2.gcno
        -:    0:Data:randomtestcard2.gcda
        -:    0:Runs:2
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include <string.h>
        -:    4:#include <stdio.h>
        -:    5:#include <assert.h>
        -:    6:#include "rngs.h"
        -:    7:#include <time.h>
        -:    8:#include <stdlib.h>
        -:    9:
function main called 2 returned 100% blocks executed 93%
        2:   10:int main(int argc, char** argv) {
        -:   11:
        -:   12:	struct gameState G;
        -:   13:
        -:   14:	int k[10] = { adventurer, gardens, council_room, village, minion, mine, cutpurse,
        2:   15:		sea_hag, great_hall, smithy };
        -:   16:
        -:   17:	int choice1;
        -:   18:	int choice2;
        -:   19:	int choice3;
        -:   20:	int handPos;
        -:   21:	int bonus;
        -:   22:	int i;
        2:   23:	int numTests = 100;
        -:   24:
      202:   25:	for(i = 0; i < numTests; i++){
branch  0 taken 200
branch  1 taken 2 (fallthrough)
      200:   26:	initializeGame(2, k, 123, &G);
call    0 returned 200
        -:   27:
      200:   28:	choice1 = rand() % 50;
call    0 returned 200
      200:   29:	choice2 = rand() % 50;
call    0 returned 200
      200:   30:	choice3 = rand() % 50;
call    0 returned 200
      200:   31:	handPos = rand() % MAX_HAND;
call    0 returned 200
      200:   32:	bonus = rand() % 50;
call    0 returned 200
        -:   33:
      200:   34:	int r = cardEffect(gardens, choice1, choice2, choice3, &G, handPos, &bonus);
call    0 returned 200
        -:   35:
      200:   36:	if (r != -1) {
branch  0 taken 0 (fallthrough)
branch  1 taken 200
    #####:   37:		printf("TEST FAILED\n");
call    0 never executed
        -:   38:	}
        -:   39:
        -:   40:	
        -:   41:	}
        -:   42:	
        -:   43:
        2:   44:	printf("TEST SUCCESSFULLY COMPLETED");
call    0 returned 2
        -:   45:
        -:   46:	
        2:   47:	return 0;
        -:   48:}
